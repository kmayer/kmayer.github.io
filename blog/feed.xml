<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ken Mayer</title>
    <description>Ramblings about technology, traveling, sailing, family, entrepeneurship. Mostly ramblings.
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 13 Jul 2017 15:45:45 -0700</pubDate>
    <lastBuildDate>Thu, 13 Jul 2017 15:45:45 -0700</lastBuildDate>
    <generator>Jekyll v3.4.3</generator>
    
      <item>
        <title>teaching</title>
        <description>&lt;p&gt;the 10x engineer is a myth, but the 2x teacher is not&lt;/p&gt;

&lt;p&gt;learning happens when you have the appropriate information and motivation&lt;/p&gt;

&lt;p&gt;tools to problem solve, instead of the answer&lt;/p&gt;

&lt;p&gt;reduce risk (safety nets)&lt;/p&gt;

&lt;p&gt;skill vs will cheat sheet&lt;/p&gt;

&lt;p&gt;mimicry (cargo culting)&lt;/p&gt;

&lt;p&gt;communication (ask probing questions, not leading questions)&lt;/p&gt;

&lt;p&gt;everyone has something to share&lt;/p&gt;

&lt;p&gt;pairing&lt;/p&gt;
</description>
        <pubDate>Mon, 10 Jul 2017 16:42:01 -0700</pubDate>
        <link>http://localhost:4000/2017/07/10/teaching.html</link>
        <guid isPermaLink="true">http://localhost:4000/2017/07/10/teaching.html</guid>
        
        
      </item>
    
      <item>
        <title>Making Remote Workplaces Work</title>
        <description>&lt;p&gt;In 1998, I worked for a company that made, yes, “made,” small office/home office all-in-one routers. The world was just getting connected enough that people were considering operating out of satellite offices, instead of sinking dollars into commercial real estate. The hardware supported dial-up, xDSL and ISDN. I lived on a boat at the time (another story). So, I called AT&amp;amp;T and asked if they could install a DSL line to the dock. It’s just another phone line, really. Nothing terribly special, but you do have to be close enough to the “demarc”&lt;label for=&quot;demarc&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;demarc&quot; class=&quot;margin-toggle&quot; /&gt;&lt;span class=&quot;sidenote&quot;&gt;‘demarcation’ point: Where the phone company’s equipment ends and your house wiring begins. &lt;/span&gt; so that the signal was strong enough. I told them my address and said, “I live on a boat. Please write that down.”&lt;/p&gt;

&lt;p&gt;The agent said, “Sure, you’re close enough.”&lt;/p&gt;

&lt;p&gt;“Are you sure? Remember, I’m on a &lt;em&gt;boat&lt;/em&gt; in a marina. You know, on the w-a-t-e-r.”&lt;/p&gt;

&lt;p&gt;“The provisioning software says that it’s fine.”&lt;/p&gt;

&lt;p&gt;Several weeks later, a technician arrives and calls me on the boat. “I can’t find your house, anywhere.”&lt;/p&gt;

&lt;p&gt;Sigh. “I’m on a boat. Come to gate G and I’ll let you in.”&lt;/p&gt;

&lt;p&gt;“I’m installing DSL on a boat?”&lt;/p&gt;

&lt;p&gt;“Apparently so.”&lt;/p&gt;

&lt;p&gt;“We can do this?!?”&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;o_O&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Ironically, I got a new boss who said that I could not work from home at all, ever. He needed my presence every single day. I quit shortly thereafter.&lt;/p&gt;

&lt;p&gt;I’ve been working remotely for long enough that I won’t feel like an idiot sharing what I’ve learned. There’s a lot of overlapping concerns here, but most importantly, working remote is a &lt;em&gt;skill&lt;/em&gt;. It makes me cringe when people claim that distributed work forces “don’t work.” (Just like Rails doesn’t scale. [trollface]) Of course they do, in particular environment, with specific team members who have the appropriate skills. As a founder, manager, leader or individual, you still have to choose your tools carefully. And, like every valuable skill, it is a &lt;em&gt;learned&lt;/em&gt; skill. It takes &lt;em&gt;practice&lt;/em&gt; to improve (and maintain). It just doesn’t “happen” when you sprinkle magic process dust over it. On the other hand, none of this is rocket science, either. Every one of these skills is an incremental refinement that you can build on to make better.&lt;/p&gt;

&lt;h2 id=&quot;why&quot;&gt;Why&lt;/h2&gt;

&lt;p&gt;Let’s answer the existential question first. Why would you want to work this way, or why would you want your work force to work this way? The main categories are lifestyle and economics.&lt;/p&gt;

&lt;p&gt;I don’t want to waste my “life” stuck in transit. My last commute was 90 minutes each way. That’s 3 hours of my life, trapped. I learned to make the best of it. I listened to a lot of podcasts.&lt;label for=&quot;podcasts&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;podcasts&quot; class=&quot;margin-toggle&quot; /&gt;&lt;span class=&quot;sidenote&quot;&gt;The Moth, Ruby 5, 5 Minutes of Javascript, The Ruby Rogues Podcast, Serial, The Nerdette Podcast, The Changelog, The Shoptalk Podcast &lt;/span&gt; Here’s the case for a sane IT department: When I was a manager, I asked my IT people if I could get something to write reports, reviews, etc. on the train. They did they very easy math. If I could do the administrative work on BART so I could not miss billing 3 hours to our contract clients, it would pay for an iPad with the tricked out data plan &lt;em&gt;for a whole year&lt;/em&gt;. Moral: Don’t go cheap on your staff, they are worth $4 per minute.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.pacerpro.com&quot;&gt;PacerPro&lt;/a&gt;, the company I am founding, is bootstrapped with private money. We can’t afford useless extras like a fancy office with rented SOMA art on the walls. I also can’t afford San Francisco salaries. Call me cheap, but I’d rather pay well in a place with a lower cost of living. It’s a “science experiment.” &lt;label for=&quot;its-a-science-experiment&quot; class=&quot;margin-toggle&quot;&gt;⊕&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;its-a-science-experiment&quot; class=&quot;margin-toggle&quot; /&gt;&lt;span class=&quot;marginnote&quot;&gt;&lt;img class=&quot;fullwidth&quot; src=&quot;/assets/its-a-science-experiment.jpg&quot; /&gt;&lt;br /&gt;&lt;/span&gt; I can build an engineering organization that is every bit as good as any other, but with lower costs, lower attrition, and better product. Here’s another economic reality that justifies remote workers: Jane, your key engineer has to move out of town for personal reasons. You don’t want to give her up. Moral: You can find and keep key staff but thinking globally.&lt;/p&gt;

&lt;h2 id=&quot;values&quot;&gt;Values&lt;/h2&gt;

&lt;p&gt;You need to instill some additional values into your organization. It provides the foundation that protects your company culture even when it is spread out.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;newthought&quot;&gt;We are all peers.&lt;/span&gt;  There is no remote versus local. That’s bullshit. Anyone who thinks that remote workers are second class needs a serious attitude adjustment.&lt;label for=&quot;hammer&quot; class=&quot;margin-toggle&quot;&gt;⊕&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;hammer&quot; class=&quot;margin-toggle&quot; /&gt;&lt;span class=&quot;marginnote&quot;&gt;&lt;img class=&quot;fullwidth&quot; src=&quot;/assets/hammer.jpg&quot; /&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;newthought&quot;&gt;Emphasize collaboration over individuals.&lt;/span&gt;  We learn from each other. That’s valuable. No more rock star ninja warrior prima donnas.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;newthought&quot;&gt;Not for everyone.&lt;/span&gt;  Interestingly enough, and perhaps counter to this entire rant, This is not for everyone. That’s fine, just don’t sign up for it if it isn’t. I make this very clear early in the interview process.&lt;/p&gt;

&lt;h2 id=&quot;hardware&quot;&gt;Hardware&lt;/h2&gt;

&lt;p&gt;Okay, let’s get into the fun stuff; the toys, I mean, the tools: Get the highest end processor, with lots of screen real estate and as much memory as you can afford. Note: If memory is upgradeable, you can let Moore’s Law pay for memory upgrades in future years to keep the dev platform running even longer. I’m torn about laptops (and it seems that I’m in a diminishing minority), especially if you’ve got a high-end MacBook Pro. They seem powerful enough to drive two 27” monitors. I have both, btw. At &lt;em&gt;least&lt;/em&gt; two 27” monitors. Human beings have evolved to be excellent at spatial reasoning, but we’re not so good at temporal reasoning. Switching from screen to screen causes a cognitive context shift that can slow down your work. Get extended warranties or service contracts, especially on laptops.&lt;/p&gt;

&lt;p&gt;You want to establish a “presence” for both yourself and your remote environment. You’ll need a decent camera, microphone and screen for rendering a face. Apple products come with excellent defaults. They are inexpensive, and the products improve every year. Some tried and true: Snowballs, Snowflakes, boom mics, tablets. Comfortable, &lt;em&gt;really&lt;/em&gt; comfortable head phones. You will be wearing these things all day, don’t go cheap. You may have to experiment. Have a “sample wall” at the home office for people to borrow and try out before they settle on something. Tastes and environments change, so allow for change.&lt;/p&gt;

&lt;p&gt;Wired, gigabit ethernet from the workstation to the ISPs modem. WiFi is great, but it is way slower than wired. When you’re driving compilers, tests, browsers, virtual machines, voice, full motion video &lt;em&gt;and&lt;/em&gt; sharing a screen, you’re going to need the bandwidth. I use &lt;a href=&quot;http://speedtest.net&quot;&gt;speedtest.net&lt;/a&gt; to check my network speed. See the table, below for nominal speeds using different media. If you can’t run a wire to the modem/router, us an Ethernet-over-A/C adapter such as the one from &lt;a href=&quot;https://amazon.com/...&quot;&gt;TP-Link – need link&lt;/a&gt;. It’s works great, truly plug and play, and feels like line speed. One more thing to note, &lt;em&gt;hosting&lt;/em&gt; a screen share uses more upload than download network packets, the &lt;em&gt;clients&lt;/em&gt; use the opposite, more down than up. It may be in your best interest to switch the host/client roles if your network pipes are asymmetric (or simply flakey that day).&lt;/p&gt;

&lt;p&gt;— Photos of various remote pairing environments —&lt;/p&gt;

&lt;h2 id=&quot;infrastructure&quot;&gt;Infrastructure&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;There’s no IT department, so spend&lt;/li&gt;
  &lt;li&gt;There’s no office manager, so spend on snacks, coffee&lt;/li&gt;
  &lt;li&gt;Backup channels, out-of-band control channels, redundancy in depth&lt;/li&gt;
  &lt;li&gt;Be cognizant of asymmetric bandwidth: up is often much smaller than down. Screenhero host is mostly up, client is mostly down.&lt;/li&gt;
  &lt;li&gt;Network monitoring tools&lt;/li&gt;
  &lt;li&gt;Configure scripts for the dev machine, so everyone has the same environment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Things are going to go wrong, on a daily basis. By having fallbacks in place and procedures for what to do next, it is easier to keep the rhythm going. My CEO doesn’t listen to me and complains when things don’t go well. [sigh] Just keep going. Sometimes you just have to split the pair. Be ready for that, too.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Voice: SoCoCo, Screenhero, Cell, Google Hangout, join.me appear.in&lt;/li&gt;
  &lt;li&gt;Video: SoCoCo, Hangout, join.me, Facetime&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;space&quot;&gt;Space&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Desk&lt;/li&gt;
  &lt;li&gt;Chair&lt;/li&gt;
  &lt;li&gt;Good lighting&lt;/li&gt;
  &lt;li&gt;Good ventilation&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Shoe organizer on the door [pic]&lt;/p&gt;

    &lt;p&gt;I was surprised at how much heat an iMac, Thunderbolt Display, MBP, 44” LED and two cats can put out.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;A work space separate from home-life space&lt;/p&gt;

    &lt;p&gt;Locked door, Red light, Do not disturb sign&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;human-scale&quot;&gt;Human Scale&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;An individual contributor’s time is worth $4 per minute. Don’t waste it, ever.&lt;/li&gt;
  &lt;li&gt;Exercise, take a longer lunch. No one takes ping pong breaks, so it’s a wash.&lt;/li&gt;
  &lt;li&gt;Suit up (uniforms make you smarter [http://www.sciencedirect.com/science/article/pii/S0022103112000200] [http://spp.sagepub.com/content/6/6/661])&lt;/li&gt;
  &lt;li&gt;We’re used to 3-dimensional visual, intangible cues, especially facial cues.&lt;/li&gt;
  &lt;li&gt;We suck at text-only. We’re a little better at audio.&lt;/li&gt;
  &lt;li&gt;It’s all about context.&lt;/li&gt;
  &lt;li&gt;Human beings are very good at spatial reasoning, and not so good at temporal. Put everything, and everyone in a “concrete” space. You have to be able to point at things.&lt;/li&gt;
  &lt;li&gt;Pairing help keeps culture and worth ethic&lt;/li&gt;
  &lt;li&gt;Get out of the “office.” Meet-ups and other person to person, in person, encounters on a weekly basis.&lt;/li&gt;
  &lt;li&gt;My pairing heuristic: Default stance. There has to be a reason &lt;em&gt;not to pair&lt;/em&gt;. Bugs are often singleable. Reading. Customer support. Spikes.&lt;/li&gt;
  &lt;li&gt;Working remote can work, but there’s a cost to making it work. It doesn’t come for free. The tradeoff, I belive is worth it.&lt;/li&gt;
  &lt;li&gt;Pet friendly!&lt;/li&gt;
  &lt;li&gt;Child friendly!&lt;/li&gt;
  &lt;li&gt;Sharing camera &amp;amp; screen keeps us more “in the room.”&lt;/li&gt;
  &lt;li&gt;Travel ready&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;process&quot;&gt;Process&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Habit and ritual keeps things moving at a steady pace.&lt;/li&gt;
  &lt;li&gt;There’s work time, and everything else isn’t&lt;/li&gt;
  &lt;li&gt;Sound check every morning&lt;/li&gt;
  &lt;li&gt;Leave the mic/camera on; a window into the other’s office&lt;/li&gt;
  &lt;li&gt;4-6 weeks indoctrination with entire team. We get to learn each other’s foibles, speach inflections, level of sarcasm.&lt;/li&gt;
  &lt;li&gt;Quarterly gatherings (nod the DNSimple blog post)&lt;/li&gt;
  &lt;li&gt;Annual all hands, with families, off-site&lt;/li&gt;
  &lt;li&gt;Assistants for administrivia&lt;/li&gt;
  &lt;li&gt;Morning katas (dojo)&lt;/li&gt;
  &lt;li&gt;Same key maps, everywhere&lt;/li&gt;
  &lt;li&gt;Code linters for style consistency&lt;/li&gt;
  &lt;li&gt;Continuous integration, deployment pipelines&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;collaboration-tools&quot;&gt;Collaboration tools&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;SoCoCo&lt;/li&gt;
  &lt;li&gt;ScreenHero&lt;/li&gt;
  &lt;li&gt;Slack (information radiator for various channels more than chat)&lt;/li&gt;
  &lt;li&gt;Zendesk for internal tasks, too (@ask)&lt;/li&gt;
  &lt;li&gt;Pivotal Tracker&lt;/li&gt;
  &lt;li&gt;Stickies (Retrium?)&lt;/li&gt;
  &lt;li&gt;Collaborative drawing app?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;financial&quot;&gt;Financial&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Not paying for office space, office manager, parking; that does not mean they are free!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;other-voices&quot;&gt;Other Voices&lt;/h2&gt;

&lt;p&gt;https://18f.gsa.gov/2016/04/27/making-a-distributed-design-team-work/
https://mfbt.ca/why-more-companies-dont-do-remote-work-and-probably-shouldn-t-d8639cf26096#.vbsvhp2jv&lt;/p&gt;
</description>
        <pubDate>Mon, 10 Jul 2017 16:42:01 -0700</pubDate>
        <link>http://localhost:4000/2017/07/10/remote-workplaces.html</link>
        <guid isPermaLink="true">http://localhost:4000/2017/07/10/remote-workplaces.html</guid>
        
        
      </item>
    
      <item>
        <title>Postbuild Cleanup</title>
        <description>
</description>
        <pubDate>Mon, 10 Jul 2017 16:42:01 -0700</pubDate>
        <link>http://localhost:4000/2017/07/10/postbuild_cleanup.html</link>
        <guid isPermaLink="true">http://localhost:4000/2017/07/10/postbuild_cleanup.html</guid>
        
        
      </item>
    
      <item>
        <title>Annual Performance Reviews Suck -- We Won't Do Them</title>
        <description>&lt;p&gt;After more than 30 years in the working world, I can not find a single person that likes annual performance reviews; neither management nor direct reports. No one thinks that they are a healthy way of providing feedback. So we won’t do them. At PacerPro, you will know how you are doing with continuous feedback. You will be compensated fairly (since I don’t have unicorn budgets) and adjusted as needed by both employer and employee.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;reference-material&quot;&gt;Reference Material&lt;/h1&gt;

&lt;p&gt;https://devchat.tv/ruby-rogues/230-rr-hiring-diversely-with-sarah-mei
search for “healthy performance reviews”&lt;/p&gt;

&lt;p&gt;https://www.linkedin.com/pulse/netflix-redefined-american-company-culture-do-same-abroad-fairchild&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Facebook COO Sheryl Sandberg as  “the most important document ever to come out of the Valley.”
http://www.slideshare.net/reed2001/culture-1798664&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;McCord says the culture is meant to only attract “fully formed adults.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;After Netflix’s culture was put online, McCord says it completely changed the conversation during interviews. Instead of saying, “Tell me about your life,” the conversation now revolved around, “How do you do productive work?”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;http://www.fastcompany.com/3056187/the-future-of-work/the-woman-who-created-netflixs-enviable-company-culture&lt;/p&gt;

&lt;p&gt;http://www.npr.org/2015/09/03/437291792/how-the-architect-of-netflixs-innovative-culture-lost-her-job-to-the-system&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Me: To this day, I can not find a single person that likes annual performance reviews, neither management nor direct reports. No one thinks that they are a healthy way of providing feedback. So why the flock do we torture ourselves? Is it a cargo-cult thing where “we’ve always done annual reviews, that’s just the way it is?” or is there some higher level business reason?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;F: I totally agree with you! Especially since research has shown that the most effective feedback is that provided within a short time frame of the event. I believe the performance review and $$ increase process is one of those things that is full of sticky wickets and so entrenched in workplace culture that it will take a long time to change in the larger arena. But there are companies - few and far between - that are experimenting with different approaches while maintaining adherence to a convoluted, complex and enormous body of law+regulations+court/administrative rulings.*&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;http://sergeykotlov.com/blog/2014/03/03/short-term-goals-trap.html?utm_source=Management+3.0+Newsletter&amp;amp;utm_campaign=0c1443f9d8-M30inAction_Moving_Motivators_new_cards1_14_2016&amp;amp;utm_medium=email&amp;amp;utm_term=0_411a50681b-0c1443f9d8-85076593&amp;amp;mc_cid=0c1443f9d8&amp;amp;mc_eid=6de5997f71
https://co-learning.be/blog/recognising-individual-achievements/13112015?utm_source=Management+3.0+Newsletter&amp;amp;utm_campaign=0c1443f9d8-M30inAction_Moving_Motivators_new_cards1_14_2016&amp;amp;utm_medium=email&amp;amp;utm_term=0_411a50681b-0c1443f9d8-85076593&amp;amp;mc_cid=0c1443f9d8&amp;amp;mc_eid=6de5997f71
https://www.evernote.com/l/AAIQGOgVTNJCr6a-sDFoNEjVLkBeqh4bPGg&lt;/p&gt;

&lt;p&gt;Intrinsic motivation (in contrast to extrinsic?)&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Don’t promise rewards in advance.&lt;/li&gt;
  &lt;li&gt;Keep anticipated rewards small.&lt;/li&gt;
  &lt;li&gt;Reward continuously, not just once.&lt;/li&gt;
  &lt;li&gt;Reward publicly, not privately.&lt;/li&gt;
  &lt;li&gt;Reward behaviors, not only outcomes.&lt;/li&gt;
  &lt;li&gt;Reward peers, not only subordinates.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;http://www.npr.org/2016/09/28/495795876/yay-its-time-for-my-performance-review-said-no-one-ever&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;According to CEB, a research consultancy, only 4 percent of HR managers think their system of assessing employees is effective at measuring performance — and 83 percent say their systems need an overhaul.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;risk-management-issues-cloud-our-judgement&quot;&gt;Risk Management Issues Cloud Our Judgement&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;F: What are the key attributes designed to reduce risk? Documentation for one. The appearance of fairness (maybe even equality - which is impossible) for another. Everyone in a job classification (technical term) should be evaluated on the same basis; perhaps there have been court rulings that have led to this being interpreted into processes that involve all that crap we both detest. Job descriptions &amp;gt; standards of evaluation &amp;gt; format and timing of evaluation  &amp;gt; application of those evaluations, and all subsequent employment decisions (pay decisions, promotion, etc.).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;F: The regulatory environment has become so onerous that these same conservative HR teams don’t update job descriptions regularly because of all the stuff they believe must be included in job descriptions so as to land on the right side of the judgement if unfair employment practice cases come before a court; or California’s or Fed EEO agencies come a-knocking in response to a complaint. Or, the Office of Federal Contract Compliance - the federal regulatory agency charged with overseeing nearly all regulations in the workplace, including employment-related - demands to review employment records to determine the level to which an employer is complying with said regulations. (This happens to companies who do in excess of $50k business annually with the feds - that was the threshold in 2005, and probably hasn’t changed.)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;LTO: To be honest Ken, most of the organizations and talent people I deal with agree with you.  There are some organizations – mostly those that don’t focus on talent development, that cling tightly to the need for performance reviews.  The question I  always ask my clients is “is the performance review tied to compensation”.  Those that say yes are going down a slippery slope and generally find the whole process excruciating.  People get very touchy when their bonus is tied to peer reviews and “bosses that are out to get me” and “subjective evaluations”.  Most of those I am working with are – to some degree or another, looking at the need for development and the best way to do that.
LTO: I think it depends where they are in the maturity spectrum and how much infrastructure they have in place.  The important things to have in place are calibration so that a person would be objectively seen to be doing an outstanding job and ready for next level across the company.  There is also the need for succession planning.  The ole 9 box. Organizations that are growing rapidly need to have a steady stream of bench ready talent for growth and the 9 box helps identify who is ready and who is still in need of development.  Then there has to be the structure to actually develop people.  Identify Hi potentials for assignments, identify what skills a person needs to develop.     &lt;br /&gt;
LTO: If organizations have the constant feedback loop in place, and this infrastructure for growth, then the performance review is not really needed.  Then they just have to take the leap!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;larger-organizations&quot;&gt;Larger Organizations&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;F: A point about documentation: not only is it important in the event of a charge of unfair employment practice; it’s incredibly valuable when an employee goes from one manager to another, or gets promoted - employees often take time to adapt to new situations, and performance may change - wouldn’t the current manager want to know the employee’s history? Or as a reference in the event of minor disagreements…&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;compensation-budgets&quot;&gt;Compensation, Budgets&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;F: Alas, the days of healthy merit increases went away when the focus changed from operational efficiency to shareholder value. I believe that is the root of most of the evil in current corporate compensation practices. Comp budgets haven’t moved more than 2-4% since the mid-1990s. Instead, the Fortune 500 set the pace for more “variable pay” programs (bonus &amp;amp; incentives); and “total compensation” - educating employees about the true cost of the benefits packages they receive.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;what-does-performance-really-mean&quot;&gt;What does “Performance” really mean?&lt;/h1&gt;

&lt;p&gt;If you have performance goals, what does “good” (“great,” “poor,” etc.) performance mean in terms of personal career growth on one side and company growth on the other side? Making up measurable goals still don’t mean much even if you do make them if they don’t move the needle. Great employees know what’s important and benefits both themselves and the company. Good employees acts on what benefits the company. Everyone else will be offered a generous severance package.&lt;/p&gt;

&lt;h1 id=&quot;risk-management&quot;&gt;Risk Management&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;F: In every. single. case, the discussion is documented - this is where forms can be handy. Not everyone has the same discipline or style to conduct these conversations, so forms assist in consistency, but they’re not fullproof. Some people managers need training and subsequent follow-up.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;bonuses&quot;&gt;Bonuses&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;F: Either a boost to annual pay or a bonus program that is paid out according to the metrics. 
     If a bonus program, the tax hit is higher than with regular pay - about 50% between the state and the feds. So if this is the route - then announce the bonus in net terms, not grossed up.  You could do a combination. You could also do like Pivotal did - spot bonuses, or gift certificates to Amazon (or whatever). This latter is treated by IRS/FTB differently than pay or bonus, would need to talk to the accounting people…give thought and be consistent about the standards for spot bonuses vs. gift rewards&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;what-motivates-people&quot;&gt;What Motivates People?&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;F: Non-cash rewards are underrated. Recognition in front of colleagues and/or management is really important. Responsiveness to employees is also incredibly important. Employees want to be listened to. They want to know they’re contributing. They want to hear that their contribution is worthwhile. They want to make a difference. It doesn’t matter what age cohort they’re in - these fundamentals never change, but the way in which they’re addressed might change.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;“A raise is only a raise for thirty days; after that, it’s just your salary.” – David Russo, VP of Human Resources at SAS Institute&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;RSA ANIMATE: Drive: The surprising truth about what motivates us&lt;/p&gt;

&lt;p&gt;https://www.youtube.com/watch?v=u6XAPnuFjJc&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;F: For 25 years, the research - both valid/reliable + stuff like Glass Door - shows that reason #1 people leave an organization is because of their boss or the management. See point above about employee perceptions of fairness (decision-making) and performance reviews.
https://www.comparably.com/w&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;notecards&quot;&gt;Notecards&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Annual compensation budgets grow between 2-4% per capita.&lt;/li&gt;
  &lt;li&gt;Managers should learn how to negotiate salaries. It’s an important skill.&lt;/li&gt;
  &lt;li&gt;Individual contributors should know their worth and be happy with their compensation.&lt;/li&gt;
  &lt;li&gt;Individual contributors will someday become leaders and will need to be able to negotiate. Compensation is one that is fraught with complexity and subjective points of view. Excellent training.&lt;/li&gt;
  &lt;li&gt;Everyone should be given formal training in negotiating.&lt;/li&gt;
  &lt;li&gt;The data is available: PayScale.com, Glassdoor.com, Comparably.com&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;annecdote&quot;&gt;Annecdote&lt;/h1&gt;

&lt;p&gt;My step-father told me this story about his early days. I just got offered a job making sixty cents an hour and I told my boss that I thought it was kind of low. He said that if I worked hard and showed my worth, that I’d get a raise when I deserve it. So, I worked hard and got really good at my job and a year goes by and – no raise. I thought maybe I wasn’t good enough. A little later the boss’s brother shows up on a Saturday morning, sees me working overtime, and asks me, “Mo, you’re a great guy, why are we still paying you sixty cents an hour?” So I tell him that his brother said he would give me a raise when I deserve it. He laughs until he’s apoplectic and says, “Mo, you idiot, you won’t deserve it &lt;em&gt;until&lt;/em&gt; you ask for it!” So that’s my lesson.&lt;/p&gt;
</description>
        <pubDate>Mon, 10 Jul 2017 16:42:01 -0700</pubDate>
        <link>http://localhost:4000/2017/07/10/performance_reviews.html</link>
        <guid isPermaLink="true">http://localhost:4000/2017/07/10/performance_reviews.html</guid>
        
        <category>management</category>
        
        
      </item>
    
      <item>
        <title>Optimistic Promises</title>
        <description>&lt;p&gt;from our javascript library&lt;/p&gt;
</description>
        <pubDate>Mon, 10 Jul 2017 16:42:01 -0700</pubDate>
        <link>http://localhost:4000/2017/07/10/optimistic_promises.html</link>
        <guid isPermaLink="true">http://localhost:4000/2017/07/10/optimistic_promises.html</guid>
        
        
      </item>
    
      <item>
        <title>Do Not Push to Red Builds</title>
        <description>&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;There's a pattern to disasters: When you examine the post mortems, its not just one failure, but a cascade of multiple failures that overwhelm the system's safety features. Pushing to a red build risks piling one failure upon another.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;One of our goals is to maintain an environment where we can deploy from &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; at any time. The logical conclusion of this goal is &lt;em&gt;continuous deployment&lt;/em&gt;, but we’ll save that for another day. For now, let’s examine testing and why &lt;label for=&quot;red-build&quot; class=&quot;margin-toggle&quot;&gt; ⊕&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;red-build&quot; class=&quot;margin-toggle&quot; /&gt;&lt;span class=&quot;marginnote&quot;&gt;A &lt;em&gt;red build&lt;/em&gt; is when we push to our source repository, which kicks off a continous integration run, the “&lt;em&gt;build&lt;/em&gt;,” which fails for one reason or another. In a perfect world, we would be able to build everything at our desktop, but as our projects grow, we break up our builds into smaller, isolated, pieces, to keep things fast. &lt;/span&gt;pushing to a red build is an anti-pattern.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.google.com/search?q=red+green+refactor&amp;amp;oq=re&amp;amp;aqs=chrome.0.69i59j69i60l3j69i57j0.911j0j7&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8&quot;&gt;Red-Green-Refactor&lt;/a&gt; is a fundamental tenet of our development methodology. It provides us with constant feedback. It warns us when things go wrong. Green tests give us a place of safey from which we can explore without fear. Like all things, it is a &lt;em&gt;fractal&lt;/em&gt; concept. &lt;span class=&quot;newthought&quot;&gt;A broken build is a red unit test, writ large.&lt;/span&gt;  Without a green build, we can not deploy. Without a green build, we can not know if the next change we make is “good.” When we push a build to the repository, we are signalling to our team that we’re making progress toward our goal, but a red build says the opposite. When you push to a red build, unless you’re pushing the fix, of course, we can’t know whether your new code is making things better or worse.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Cowboy Bob pushes a seemingly innocuous change to master and goes to lunch. The build goes red. Agile Alice, not noticing the red build, merges her branch to master (tests were green on the branch), too. Now, the build is still red, but some of Alice’s tests are going red, now, too. Alice starts scratching her head and wonders how things could go so terribly wrong. Meanwhile, there’s a problem on production and DevOps Dan creates a production hotfix and deploys that.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure&gt;&lt;figcaption&gt;Stormy Skies, http://archive.boston.com/bigpicture/2010/07/stormy_skies.html&lt;/figcaption&gt;&lt;img src=&quot;/assets/95D17118-BBCA-4400-B0BE-8C345361493E.jpg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;&lt;span class=&quot;newthought&quot;&gt;When the build goes red, your &lt;em&gt;first&lt;/em&gt; priority is to fix it.&lt;/span&gt;  All other tasks are secondary. This gets you back on track.&lt;/p&gt;

&lt;p&gt;In theory there is no difference between theory and practice. In practice there is. You will, at some time or another, have to use some judgement. An intermittently failing build is a code smell, but you might not be able to fix it. You’ll have to choose which is more valuable given the risk.&lt;/p&gt;
</description>
        <pubDate>Sat, 08 Jul 2017 00:00:00 -0700</pubDate>
        <link>http://localhost:4000/2017/07/08/do-not-push-to-red-builds.html</link>
        <guid isPermaLink="true">http://localhost:4000/2017/07/08/do-not-push-to-red-builds.html</guid>
        
        <category>agile</category>
        
        <category>xp</category>
        
        <category>mantras</category>
        
        <category>testing</category>
        
        
      </item>
    
      <item>
        <title>To be the Dumbest Person in the Room</title>
        <description>&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;I want to work with intelligent, opinionated people who can make the world a little better. Then iterate.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I’m the CTO of &lt;a href=&quot;https://www.pacerpro.com&quot;&gt;PacerPro&lt;/a&gt;. If you’re looking for a software developer job, then you’ve come to the right place; read on, my friend. If you’re not looking, yet, now, or never, but you know of someone who might be interested in this, please pass this on to them. You never know how things work out.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;newthought&quot;&gt;What is PacerPro and why should I care?&lt;/span&gt;  PacerPro searches for, and collects documents from, PACER.gov&lt;label for=&quot;pacer&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;pacer&quot; class=&quot;margin-toggle&quot; /&gt;&lt;span class=&quot;sidenote&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/PACER_(law)&quot;&gt;PACER&lt;/a&gt; (acronym for Public Access to Court Electronic Records) is an electronic public access service of United States federal court documents. It looks like it was written using 1990’s era FrontPage. It has &lt;a href=&quot;https://free.law/2015/03/20/what-is-the-pacer-problem/&quot;&gt;lots of problems&lt;/a&gt;. &lt;/span&gt;, then distributes them to our clients. We strive to have the most accurate, up-to-date, and complete set of “facts on the ground.” The company has been in business since 2012, we have paying customers, many of them in the &lt;a href=&quot;http://www.americanlawyer.com/id=1202784597030/The-2017-Am-Law-100?slreturn=20170607151359&quot;&gt;Am Law 100&lt;/a&gt;. I’ve been involved with PacerPro since 2013 when I was anchoring the project at Pivotal Labs. &lt;a href=&quot;https://www.linkedin.com/in/gavin-mcgrane-a9baa82/&quot;&gt;Gavin McGrane&lt;/a&gt; is a very straightforward CEO, no drama. He believes in his vision and knows the business because he (and his family) are lawyers. The company has an interesting, albeit work-a-day, future. I believe that PacerPro solves a terrible productivity problem with US Courts system.&lt;/p&gt;

&lt;p&gt;&lt;label for=&quot;jaguar-priest&quot; class=&quot;margin-toggle&quot;&gt;⊕&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;jaguar-priest&quot; class=&quot;margin-toggle&quot; /&gt;&lt;span class=&quot;marginnote&quot;&gt;&lt;img class=&quot;fullwidth&quot; src=&quot;/assets/jaguar-priest.jpg&quot; /&gt;&lt;br /&gt;WANTED: Jaguar Priest&lt;br /&gt;1. To impersonate and invoke the deity&lt;br /&gt;2. To offer food and drink to the idols&lt;br /&gt;3. To effect the drawing of the pebbles and regulate the calendar&lt;br /&gt;4. To read weather and other omens in the clouds&lt;br /&gt;5. To study the night sky and interpret the appearance of the celestial bodies&lt;br /&gt;6. To determine the lucky and unlucky days for various mundane activities by the casting of lots&lt;br /&gt;7. To perform the numerous rituals of the cup, plate, etc.&lt;br /&gt;8. To work miracles&lt;br /&gt;9. To concoct medicinal herbs into ceremonial drinks&lt;br /&gt;10. To predict the future&lt;br /&gt;11. To announce the times for various agricultural and other activities&lt;br /&gt;12. To insure adequate rainfall&lt;br /&gt;13. To avert or bring to a timely end famine, drought, epidemics, plagues of ants and locusts, earthquakes&lt;br /&gt;14. To distribute food to the hungry in time of need&lt;br /&gt;15. To cut the honey from the hives&lt;br /&gt;16. To determine the compensation to be placed on the crossroad altars&lt;br /&gt;17. To read from the sacred scriptures the future road of the katun [calendar round]&lt;br /&gt;18. To design and supervise the carving of stelae [stone monuments], the manufacture of word and clay idols, and the construction of temples&lt;br /&gt;19. To construct tables of eclipses and heliacal risings of planets [such as are found in the Dresden Codex]&lt;br /&gt;–Makemson, M.W. &lt;em&gt;The Book of the Jaguar Priest&lt;/em&gt;, a translation of the Book of Chilam Balam of Tizimin, with commentary. Henry Schuman, New York, 1951, p. 141.&lt;/span&gt; Our mission is to make PACER documents more accessible, with less friction and lower costs. If you’ve heard of &lt;a href=&quot;https://arstechnica.com/tech-policy/2013/02/the-inside-story-of-aaron-swartzs-campaign-to-liberate-court-filings/2/&quot;&gt;Aaron Swartz&lt;/a&gt;’s efforts or the &lt;a href=&quot;https://free.law/recap/&quot;&gt;RECAP&lt;/a&gt; project, we’re in a similar space, except that we’re trying to do it in a way that is financially profitable (in the long run, anyway, that’s the plan). Most of the documents from PACER are behind a “paywall,” even though they are public records, but once they are downloaded from PACER, we can give them away without charge. The other big product that we’re building is an analytics platform that sips off of this data stream to give law firms a tactical advantage in their marketplace.&lt;/p&gt;

&lt;p&gt;I’m looking for my next “senior” engineer. (I’d like to hire a &lt;em&gt;pair&lt;/em&gt;, but, you know, budget.) &lt;span class=&quot;newthought&quot;&gt;What makes for an interesting candidate?&lt;/span&gt;  It’s not a degree, or &lt;em&gt;n&lt;/em&gt; years of experience. PacerPro’s founders are practicing lawyers. They know their stuff. I probably have the fewest number of degrees compared to everyone else in the company. I’m looking at the following qualities: You understand our business, or, if you don’t, you have a genuine curiosity and ability to learn it. You are able to have conversations with our customers and stakeholders. You know how to research a problem. You know when to ask for help. You can think beyond the current story and consider ROI. You’ve shipped a &lt;em&gt;real&lt;/em&gt; product before that you can show me. You have &lt;em&gt;hands-on&lt;/em&gt; experience with our technology stack. I hear that “full stack” has become a dirty word, but we all do pretty much everything around here. Expect to handle Zendesk tickets from lawyers about one day out of the week. I’m not expecting you to be an &lt;em&gt;expert&lt;/em&gt; in &lt;em&gt;everything&lt;/em&gt;, but competence or the ability to spin up without too much inertia is a requirement. You are an eternal student and teacher. You want to bring us all to the next level, as do we for you. You want to work using our methodologies. We are an Agile shop in a mostly XP style; we have a daily stand-up (and evening round-up), pair-programming is our default stance; we need a good reason &lt;em&gt;not&lt;/em&gt; to pair. Test-Driven-Development is how we grow code. Clear, understandable code is more valuable than clever tricks. We do code reviews on pull requests. Our backlog is in Pivotal Tracker, groomed by myself and the product manager, &lt;a href=&quot;https://www.linkedin.com/in/arthurlaw&quot;&gt;Arthur Law&lt;/a&gt;. We have automated continuous integration tests. We have continuous code quality testing. We can deploy at any time with one command line: &lt;code class=&quot;highlighter-rouge&quot;&gt;rake production deploy&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;label for=&quot;circle-ci&quot; class=&quot;margin-toggle&quot;&gt; ⊕&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;circle-ci&quot; class=&quot;margin-toggle&quot; /&gt;&lt;span class=&quot;marginnote&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;build status: &lt;/code&gt; &lt;img src=&quot;https://circleci.com/gh/PacerPRO/pacerpro.svg?style=svg&amp;amp;circle-token=93ac702dd0156840542e67321eb3beb271033577&quot; alt=&quot;Circle CI&quot; /&gt; &lt;/span&gt;&lt;label for=&quot;code-climate&quot; class=&quot;margin-toggle&quot;&gt;⊕&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;code-climate&quot; class=&quot;margin-toggle&quot; /&gt;&lt;span class=&quot;marginnote&quot;&gt;&lt;img class=&quot;fullwidth&quot; src=&quot;https://codeclimate.com/repos/51b7726089af7e17e90010a4/badges/cce4bf6507763c1d3a7d/gpa.svg&quot; /&gt;&lt;br /&gt;&lt;/span&gt;&lt;label for=&quot;test-coverage&quot; class=&quot;margin-toggle&quot;&gt;⊕&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;test-coverage&quot; class=&quot;margin-toggle&quot; /&gt;&lt;span class=&quot;marginnote&quot;&gt;&lt;img class=&quot;fullwidth&quot; src=&quot;https://codeclimate.com/repos/51b7726089af7e17e90010a4/badges/cce4bf6507763c1d3a7d/coverage.svg&quot; /&gt;&lt;br /&gt;&lt;/span&gt;A big chunk of our code is navigating the PACER system without a human operator, i.e., HTML screen scraping. We’re building an &lt;a href=&quot;https://app.swaggerhub.com/apis/PacerPro/pacer-pro&quot;&gt;API&lt;/a&gt; for our clients to use to integrate with their internal systems that are often client-confidential. We want to build NLP/deep/machine learning that will identify documents as they pass through our platform so that our clients can act on them in a timely manner. We want to expand our search capabilities into our PDF repository.&lt;/p&gt;

&lt;p&gt;We’re not even close to huge, but we’re not a small project any more, either. &lt;label for=&quot;status&quot; class=&quot;margin-toggle&quot;&gt; ⊕&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;status&quot; class=&quot;margin-toggle&quot; /&gt;&lt;span class=&quot;marginnote&quot;&gt;&lt;a href=&quot;http://status.pacerpro.com&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;site status&lt;/code&gt;&lt;/a&gt; &lt;/span&gt;Our operations are hosted by Heroku. We run into scaling issues now and then, which is a good thing. We’re pretty good at handling them, too, which is another good thing. Our PostgreSQL database has grown to about 200GB, the S3 store has over 1.8 million documents, and, at peak, we get 500-750 requests per minute. We send out 500,000 transactional emails per month. Our web server is written in Ruby on Rails 4.2.x, with a smidgen of Node Express. Our front end is mostly written in ReactJS 0.14.x, our newer code uses Redux, with a bunch of legacy Backbone code. Yep, we got ourselves some technical debt. We know where it is (mostly) and how to fix it, given time and eyeballs. That’s where you’d help out.&lt;/p&gt;

&lt;p&gt;PacerPro is a small, distributed team. There is no physical office (at the time of this writing; we have tentative plans, fall 2017, to establish a space near the CalTrain station at 4th &amp;amp; King). We live in an always-on virtual space of &lt;a href=&quot;https://twitter.com/kennethmayer/status/862728339928129536&quot;&gt;SoCoCo&lt;/a&gt; and Screenhero. If you need &lt;a href=&quot;https://twitter.com/kennethmayer/status/854164081481089026&quot;&gt;something&lt;/a&gt; to be &lt;a href=&quot;https://twitter.com/kennethmayer/status/852953207856799745&quot;&gt;productive&lt;/a&gt;, we’ll reimburse you for it. Because we pair a lot, we have to work during a common, scheduled, time slot, 9:30-5:30, Pacific Time. I’ll do my best to accommodate some time shifting. Since pairing is as intense as it is productive, we work a reasonable work day. After hours and weekends are the very rare exception, only when it can’t be avoided.&lt;/p&gt;

&lt;p&gt;Interested? Reach out to me.&lt;/p&gt;
</description>
        <pubDate>Fri, 07 Jul 2017 00:00:00 -0700</pubDate>
        <link>http://localhost:4000/2017/07/07/engineer.html</link>
        <guid isPermaLink="true">http://localhost:4000/2017/07/07/engineer.html</guid>
        
        <category>agile</category>
        
        <category>tdd</category>
        
        <category>pairing</category>
        
        <category>jobs</category>
        
        <category>rubyonrails</category>
        
        <category>reactjs</category>
        
        <category>heroku</category>
        
        <category>circleci</category>
        
        <category>codeclimate</category>
        
        <category>cloud</category>
        
        <category>javascript</category>
        
        <category>testing</category>
        
        <category>postgresql</category>
        
        <category>redis</category>
        
        <category>aws</category>
        
        <category>s3</category>
        
        <category>legal</category>
        
        <category>pacer</category>
        
        <category>opendata</category>
        
        
      </item>
    
      <item>
        <title>Performant Large-Scale Postgres Migrations</title>
        <description>&lt;p&gt;Recently I tried to add a column to one of our very big tables, and as you might expect from the title of this blog, it took so long that I aborted it after an hour. Can you spot the problem?&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AddInfoColumnToCaseDocketReport&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Migration&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;change&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_column&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:case_docket_reports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:jsonb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;default: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'{}'&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;span class=&quot;newthought&quot;&gt;Not all migrations are created equal.&lt;/span&gt;  Adding a column to Postgres &lt;em&gt;without&lt;/em&gt; a default value is very fast because only the catalog tables get written. &lt;em&gt;With&lt;/em&gt; a default value, however, it can get very, very, s-l-o-w, because it has to make a copy of every row and reindex.&lt;/p&gt;

&lt;h2 id=&quot;-add-columns-without-default-values&quot;&gt;=&amp;gt; Add columns without default values&lt;/h2&gt;

&lt;p&gt;Adding a default value to an &lt;em&gt;existing&lt;/em&gt; column is also remarkably fast, as it also does not change any existing rows. So, if we break this migration into 2 steps, it will be very, very, fast:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AddInfoColumnToCaseDocketReport&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Migration&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;change&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_column&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:case_docket_reports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:jsonb&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;change_column&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:case_docket_reports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:jsonb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;default: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'{}'&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;-add-default-values-to-existing-columns&quot;&gt;=&amp;gt; Add default values to existing columns&lt;/h2&gt;

&lt;p&gt;Of course, now your table has columns filled with NULL values, which may or may not be a bad thing in your application. Let’s assume for the moment that it is a bad thing. How do we update all of those rows? The naive approach in Rails is to iterate over each object, assigning the new value:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;CaseDocketReport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;info: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;batch_size: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;docket_report&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;docket_report&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;info: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{})&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This is also very slow because you have to drag each row from Postgres, over the “wire” and into Rails, create the associated objects and then write each change out in an isolated transaction. There is an alternative that is very fast: Rails exposes the SQL &lt;code class=&quot;highlighter-rouge&quot;&gt;UPDATE&lt;/code&gt; via the &lt;code class=&quot;highlighter-rouge&quot;&gt;#update_all&lt;/code&gt; method. This is very, very fast:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kp&quot;&gt;loop&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CaseDocketReport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;info: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10_000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;update_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;info: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{})&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This little snippet, in one SQL command, will update 10,000 rows at a time!&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;info&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{}'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;case_docket_reports&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;info&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;-do-as-much-work-inside-postgres-not-in-rails&quot;&gt;=&amp;gt; Do as much work inside Postgres, not in Rails&lt;/h2&gt;

&lt;p&gt;As I’ve written &lt;a href=&quot;/2015/08/15/zero-downtime-migrations.html&quot;&gt;before&lt;/a&gt;, plan and deploy your migrations so that they can run independently of your production code. That way, you can deploy &lt;em&gt;just&lt;/em&gt; your migrations, and run them in production without affecting your application, or incurring downtime.&lt;/p&gt;

&lt;p&gt;&lt;label for=&quot;1&quot; class=&quot;margin-toggle&quot;&gt; ⊕&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;1&quot; class=&quot;margin-toggle&quot; /&gt;&lt;span class=&quot;marginnote&quot;&gt;Can Rails do this? As of Rails 4, &lt;a href=&quot;https://github.com/rails/rails/commit/2d33796457b139a58539c890624591c97354d334&quot;&gt;yes&lt;/a&gt;! &lt;/span&gt;Another problem area are indexes, because creating one would normally block writes. By adding the index &lt;code class=&quot;highlighter-rouge&quot;&gt;CONCURRENTLY&lt;/code&gt;, we can avoid this. Because Rails runs migrations inside a transaction and concurrent indexes &lt;a href=&quot;https://www.postgresql.org/docs/9.4/static/sql-createindex.html#SQL-CREATEINDEX-CONCURRENTLY&quot;&gt;must be added outside one&lt;/a&gt;, we add &lt;code class=&quot;highlighter-rouge&quot;&gt;disable_ddl_transaction!&lt;/code&gt; to the migration.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AddIndexToAsksActive&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Migration&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;disable_ddl_transaction!&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;change&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_index&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:asks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:active&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;algorithm: :concurrently&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;-add-indexes-concurrently&quot;&gt;=&amp;gt; Add indexes CONCURRENTLY&lt;/h2&gt;

&lt;p&gt;Another trouble spot is changing the type of a column. Again, as I mentioned in &lt;a href=&quot;/2015/08/15/zero-downtime-migrations.html&quot;&gt;Zero Downtime Migrations&lt;/a&gt;, the solution is: “Don’t!” Instead, add a new column with a new name. When you’ve completed your upgrades, and, at your leisure, you can &lt;code class=&quot;highlighter-rouge&quot;&gt;DROP&lt;/code&gt; the column. Here’s an interesting side-tip, you can “hide” the old column from your code so you don’t accidentally use it:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;columns&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# TODO: Remove after completing migration&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reject&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ecf_username'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;#...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;-dont-change-columns-add-new-ones-then-drop-the-old-ones&quot;&gt;=&amp;gt; Don’t change columns, add new ones, then drop the old ones&lt;/h2&gt;

&lt;p&gt;You can also run into trouble in the most delightfully insidious way by running an innocuous-looking query that accidentally starts locking big chunks of your db. A good example that has bitten everyone at least once is running a back-office analytics query that does an enormous n-way join. Solution: have a read-only replica and query to that!&lt;/p&gt;

&lt;h2 id=&quot;-run-big-queries-against-a-read-only-replica&quot;&gt;=&amp;gt; Run big queries against a read-only replica&lt;/h2&gt;

&lt;p&gt;My last recommendation is this: Hire a really excellent DBA or outsource the whole DB platform. There are endless numbers of knobs and settings and configuration values that you might or might not get right. As your system grows to the point of being “interesting,” you’re going to need that expertise. Or, you can take advantage of PaaS companies who make it their core competency. You get a “slice” of an expert DBA. In addition, they probably know how to scale your database up (and down) better than you ever will, since they do it all the time, and you only need to do it once in awhile. Of course, if you’re lucky, you’ll have those problems that are good to have, and you can move things in-house.&lt;/p&gt;
</description>
        <pubDate>Wed, 30 Nov 2016 00:00:00 -0800</pubDate>
        <link>http://localhost:4000/2016/11/30/performant-postgres-migrations.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/11/30/performant-postgres-migrations.html</guid>
        
        <category>rails</category>
        
        <category>postgres</category>
        
        <category>scale</category>
        
        
      </item>
    
      <item>
        <title>Sacrificial Test Classes</title>
        <description>&lt;p&gt;Today I learned that there’s a difference between a throw-away class and a sacrificial class. When writing rspec tests, you want the latter; otherwise you might create some very hard-to-debug test pollution.&lt;/p&gt;

&lt;p&gt;Until today, I would create a throw-away test class in my rspec tests, especially when unit testing a module:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;RSpec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;describe&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MyModule&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyTestClass&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MyModule&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'tests something'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MyTestClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;do_something&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;It turns out that this is a &lt;em&gt;terrible&lt;/em&gt; thing to do because it will pollute your global name space with &lt;code class=&quot;highlighter-rouge&quot;&gt;MyTestClass&lt;/code&gt;. In my naïve understanding of rspec, I thought that things created &lt;em&gt;inside&lt;/em&gt; the rspec block would be scoped to that block. This is very much the case when writing tests in &lt;code class=&quot;highlighter-rouge&quot;&gt;MiniTest&lt;/code&gt;; you are just creating classes and methods, so a little private class can’t &lt;em&gt;leak&lt;/em&gt; out of your test examples. Not so when writing rspec tests. There’s a GitHub issue about it that gives some good explanations about the hows and why: &lt;a href=&quot;https://github.com/rspec/rspec-core/issues/2181&quot;&gt;https://github.com/rspec/rspec-core/issues/2181&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here’s another, simpler, example:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;ss&quot;&gt;irb: &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Foo1&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BAR&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;===&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;irb: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Foo1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;BAR&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;===&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;irb: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;BAR&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;NameError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uninitialized&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;constant&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BAR&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;irb: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Foo2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-+&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BAR&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;===&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Foo2&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;irb: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;BAR&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;===&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;irb: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Foo2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;BAR&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;irb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;warning: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toplevel&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;constant&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BAR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;referenced&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Foo2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;BAR&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;===&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Yikes! &lt;code class=&quot;highlighter-rouge&quot;&gt;Foo1&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Foo2&lt;/code&gt; are roughly similar class, but &lt;code class=&quot;highlighter-rouge&quot;&gt;BAR&lt;/code&gt; is scoped to &lt;code class=&quot;highlighter-rouge&quot;&gt;Foo1&lt;/code&gt;, as in, &lt;code class=&quot;highlighter-rouge&quot;&gt;Foo1::BAR&lt;/code&gt;, but &lt;code class=&quot;highlighter-rouge&quot;&gt;Foo2&lt;/code&gt; created a top level constant named &lt;code class=&quot;highlighter-rouge&quot;&gt;BAR&lt;/code&gt;. You can see how this might make your tests break. &lt;a href=&quot;https://github.com/myronmarston&quot;&gt;Myron Marston&lt;/a&gt; explained in the issue:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;While not ideal, it’s known, expected behavior. In Ruby, when you define a constant in a block, it uses the module scoping of whatever is outside the block as the constant namespace. … This is simply how Ruby works and there’s nothing RSpec can do about this. (And since it’s how ruby works, I’m not sure that we should try to do anything different.)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, what should we do, if these throw-away classes are not so temporary? My example gives a hint: Create a “sacrificial class,” instead, using a &lt;code class=&quot;highlighter-rouge&quot;&gt;let&lt;/code&gt; variable instead, since those variables &lt;em&gt;are&lt;/em&gt; scoped to the example group.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;RSpec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;describe&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MyModule&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:my_test_class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MyModule&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'tests something'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_test_class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;do_something&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;There, all better. No more test pollution.&lt;/p&gt;
</description>
        <pubDate>Thu, 10 Nov 2016 00:00:00 -0800</pubDate>
        <link>http://localhost:4000/2016/11/10/sacrificial-test-classes.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/11/10/sacrificial-test-classes.html</guid>
        
        
      </item>
    
      <item>
        <title>Memory Leak Whack-a-Mole</title>
        <description>&lt;p&gt;&lt;label for=&quot;whack-a-mole&quot; class=&quot;margin-toggle&quot;&gt;⊕&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;whack-a-mole&quot; class=&quot;margin-toggle&quot; /&gt;&lt;span class=&quot;marginnote&quot;&gt;&lt;img class=&quot;fullwidth&quot; src=&quot;/assets/whack-a-mole.jpg&quot; /&gt;&lt;br /&gt;&lt;a href=&quot;https://www.flickr.com/photos/tpapi/2765541278&quot;&gt;https://www.flickr.com/photos/tpapi/2765541278&lt;/a&gt;&lt;/span&gt;Memory leaks happen. They shouldn’t, but you just can’t squash enough of them. Or the leak is so slow that it takes hours to manifest. The trouble with memory leaks is that they are permanent for the life of a process. Once a process has expanded its &lt;a href=&quot;http://stackoverflow.com/questions/7880784/what-is-rss-and-vsz-in-linux-memory-management&quot;&gt;VSZ&lt;/a&gt;, there’s no way in Unix to shrink it. So your process starts to bloat, eventually your servers &lt;a href=&quot;http://www.folkstalk.com/2011/11/swapping-and-paging-in-unix.html&quot;&gt;page&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Thrashing_(computer_science)&quot;&gt;thrash&lt;/a&gt;. Performance tanks. Then your pager starts going off and there goes your beauty sleep.&lt;/p&gt;

&lt;p&gt;On your own servers this is when &lt;a href=&quot;https://en.wikipedia.org/wiki/Init&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;init&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://mmonit.com/monit/&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;monit&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http://godrb.com/&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;god&lt;/code&gt;&lt;/a&gt; come into play; they watch your production processes for signs of trouble and then issue restarts. On &lt;a href=&quot;https://heroku.com&quot;&gt;Heroku&lt;/a&gt; and other PaaS, you don’t have access to these tools, in fact, quite often, you simply &lt;em&gt;can’t&lt;/em&gt; restart a process; the container &lt;em&gt;is&lt;/em&gt; the process. So what can you do? Killing the container might disrupt a critical transaction and piss off a user. Are you running a bunch of background tasks in &lt;a href=&quot;https://github.com/mperham/sidekiq&quot;&gt;Sidekiq&lt;/a&gt;? What happens if you pull the plug on a 100-thread worker?&lt;/p&gt;

&lt;p&gt;The general recipe that &lt;em&gt;won’t&lt;/em&gt; impact performance nor threaten data loss is as follows: &lt;br /&gt;&lt;br /&gt;1. Detect the problem (trickier than you think);&lt;br /&gt;2. Receive a &lt;a href=&quot;https://en.wikipedia.org/wiki/Webhook&quot;&gt;webhook&lt;/a&gt;;&lt;br /&gt;3. Signal&lt;label for=&quot;signals&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;signals&quot; class=&quot;margin-toggle&quot; /&gt;&lt;span class=&quot;sidenote&quot;&gt;Not to confuse you, but I’m &lt;em&gt;not&lt;/em&gt; talking about &lt;a href=&quot;https://en.wikipedia.org/wiki/Unix_signal&quot;&gt;Unix signals&lt;/a&gt;. I just mean “Send a message from one running process to another over some channel.” &lt;a href=&quot;http://man7.org/linux/man-pages/man7/signal.7.html&quot;&gt;signal(7)&lt;/a&gt; might be used as the channel, but that’s an implementation detail. &lt;/span&gt; the process to stop accepting new work;&lt;br /&gt;4. Wait for the process to finish all “in-flight” work and go “quiet,” and finally;&lt;br /&gt;5. Signal the process to exit, allowing your cloud infrastructure to create a new container instance with a fresh memory footprint.&lt;br /&gt;&lt;br /&gt;The challenges are that you might not be able to monitor &lt;em&gt;within&lt;/em&gt; the same container, or that logs are streaming to an outside consumer. In addition, each application has different designs for signal handling.&lt;/p&gt;

&lt;h2 id=&quot;detection&quot;&gt;Detection&lt;/h2&gt;

&lt;p&gt;Heroku will insert log messages into your application’s &lt;a href=&quot;https://devcenter.heroku.com/articles/logging&quot;&gt;log stream&lt;/a&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Error R14&lt;/code&gt; for example, which signals that your container is over it’s memory quota.&lt;/p&gt;

&lt;figure&gt;&lt;figcaption&gt;Bad things are about to happen.&lt;/figcaption&gt;&lt;img src=&quot;/assets/heroku-log-entry.png&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;You need to have a service that consumes the log stream, looks for patterns (regular expressions) and then triggers an action. &lt;a href=&quot;https://logentries.com/&quot;&gt;Logentries.com&lt;/a&gt; has such a facility, but others do, too. It is best to experiment with a few of them before making a commitment.&lt;/p&gt;

&lt;figure&gt;&lt;figcaption&gt;Stand back! I know regular expressions!&lt;/figcaption&gt;&lt;img src=&quot;/assets/error-r14-regexp.png&quot; /&gt;&lt;/figure&gt;

&lt;h2 id=&quot;receiving-the-webhook&quot;&gt;Receiving the Webhook&lt;/h2&gt;

&lt;p&gt;One of Logentries features is the ability to send a webhook when a regular expression matches. Let’s create a controller that will accept the webhook message.&lt;label for=&quot;webhook-message-format&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;webhook-message-format&quot; class=&quot;margin-toggle&quot; /&gt;&lt;span class=&quot;sidenote&quot;&gt;The message format is vendor-specific, but it should be well documented. &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;label for=&quot;logentries-auth&quot; class=&quot;margin-toggle&quot;&gt; ⊕&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;logentries-auth&quot; class=&quot;margin-toggle&quot; /&gt;&lt;span class=&quot;marginnote&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;LogentriesAuth&lt;/code&gt; is a special helper class to confirm that the message is authentic. We wouldn’t want some nefarious third party injecting messages into our system and restarting our servers over and over again, would we? A gist of it is available here, under the MIT license. &lt;a href=&quot;https://gist.github.com/kmayer/f7e5a6ebb9414bb97b1cdd586aced18a&quot;&gt;https://gist.github.com/kmayer/f7e5a…&lt;/a&gt; &lt;/span&gt;&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LogentriesAlertsController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationController&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;skip_before_action&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:verify_authenticity_token&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:unprocessable_entity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt;
      &lt;span class=&quot;no&quot;&gt;LogentriesAuth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;authorized?&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# do something here...&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:ok&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Once we’ve parsed the message and determined that we can act on it, we need to send a message, in this first case, to &lt;a href=&quot;http://puma.io/&quot;&gt;Puma&lt;/a&gt;. We’ll leverage a well known and commonly used service, &lt;a href=&quot;http://redis.io/&quot;&gt;Redis&lt;/a&gt;, as a general delivery post office; we’ll write a key/value pair and Puma will check for the key &lt;code class=&quot;highlighter-rouge&quot;&gt;puma::stop::#{hostname}&lt;/code&gt; (where hostname looks like “&lt;code class=&quot;highlighter-rouge&quot;&gt;web.5&lt;/code&gt;”). If the key is present, it will start the orderly shutdown process.&lt;/p&gt;

&lt;p&gt;&lt;label for=&quot;private&quot; class=&quot;margin-toggle&quot;&gt; ⊕&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;private&quot; class=&quot;margin-toggle&quot; /&gt;&lt;span class=&quot;marginnote&quot;&gt;For brevity, I’ve omitted the &lt;code class=&quot;highlighter-rouge&quot;&gt;private&lt;/code&gt; helper methods used in the controller. A complete gist is available here: &lt;a href=&quot;https://gist.github.com/kmayer/abed3364ccd6906c2751a1dc51b604a8&quot;&gt;https://gist.github.com/kmayer/abed3…&lt;/a&gt; &lt;/span&gt;&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:unprocessable_entity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt;
      &lt;span class=&quot;no&quot;&gt;LogentriesAuth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;authorized?&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;what&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/R1[45]/&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; 
         &lt;span class=&quot;n&quot;&gt;who&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/web\.\d+/&lt;/span&gt;         
      &lt;span class=&quot;no&quot;&gt;Redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;puma::stop::&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;who&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
        &lt;span class=&quot;s2&quot;&gt;&quot;*** HEROKU ERROR &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;what&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; ***&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
        &lt;span class=&quot;ss&quot;&gt;ex: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;seconds&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:ok&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;signal-the-application-to-stop-accepting-new-work&quot;&gt;Signal the application to stop accepting new work&lt;/h2&gt;

&lt;p&gt;&lt;span class=&quot;newthought&quot;&gt;&lt;a href=&quot;http://puma.io&quot;&gt;Puma&lt;/a&gt;&lt;/span&gt;  version 3 has a new feature that allows you to add &lt;a href=&quot;https://github.com/puma/puma#plugins&quot;&gt;custom plugins&lt;/a&gt;. With it, you can use Puma’s API to signal itself to stop; it will handle the rest of the clean up on its own. This  custom plugin checks Redis for the “message” set by our controller. Puma background threads are lightweight enough that they won’t impact performance.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'puma/plugin'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'redis'&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Puma&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Plugin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;launcher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# Heroku sets this environment variable&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;hostname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'DYNO'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hostname&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;current&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# we can haz Redis?&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ping&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'PONG'&lt;/span&gt; 

    &lt;span class=&quot;n&quot;&gt;signal_token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;puma::stop::&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hostname&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;in_background&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;kp&quot;&gt;loop&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;signal_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;del&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;signal_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;launcher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;stop&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Okay, all of the pieces are in place so we can do some integration tests. Let’s inject a log entry that looks close enough to match our regular expressions to trigger the alert.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'heroku web.1 - - Error R14 (Memory quota exceeded)'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If all goes well, you should see the message hit your log, then sometime later, a &lt;code class=&quot;highlighter-rouge&quot;&gt;POST&lt;/code&gt; on the &lt;code class=&quot;highlighter-rouge&quot;&gt;LogentriesAlertsController&lt;/code&gt;, then a key/value pair inserted into Redis and finally, your Puma instance quitting. Your PaaS will spawn a new replacement with a clean, fresh serving of memory.&lt;/p&gt;

&lt;h2 id=&quot;wait-for-the-process-to-finish-all-in-flight-work&quot;&gt;Wait for the process to finish all “in-flight” work&lt;/h2&gt;

&lt;p&gt;&lt;span class=&quot;newthought&quot;&gt;&lt;a href=&quot;https://github.com/mperham/sidekiq&quot;&gt;Sidekiq&lt;/a&gt;&lt;/span&gt;  is a little trickier; It has an &lt;a href=&quot;https://github.com/mperham/sidekiq/wiki/API#processes&quot;&gt;API&lt;/a&gt; for going quiet, which will complete all in-flight work, and won’t pull any new jobs off the queue; it has &lt;code class=&quot;highlighter-rouge&quot;&gt;#stop!&lt;/code&gt; which will signal the main process to exit. But there’s no API call that says, “go quiet, then quit.” That’s okay, it’s easy enough to build a little class to wrap the Sidekiq process control API:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SidekiqControl&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@pattern&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;quiet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timeout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;processes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:quiet!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;timeout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;busy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;processes&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'busy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sum&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;until&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;busy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timeout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;stop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timeout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;quiet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;processes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:stop!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;timeout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;until&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;processes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;empty?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timeout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;processes&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Sidekiq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ProcessSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@pattern&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hostname'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;signal-the-process-to-exit&quot;&gt;Signal the Process to Exit&lt;/h2&gt;

&lt;p&gt;Also, unlike Puma, there isn’t a similar plugin architecture for running arbitrary background threads. So we’ll build a little &lt;code class=&quot;highlighter-rouge&quot;&gt;rake&lt;/code&gt; task:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'sidekiq:stop'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'environment'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;sq_ctl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SidekiqControl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;sq_ctl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;stop&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and now, let’s modify the controller:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LogentriesAlertsController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationController&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;what&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/R1[45]/&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;who&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/sidekiq\.\d+/&lt;/span&gt;
       &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;bundle exec rake sidekiq:stop[&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;who&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;] &amp;amp;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Again, we can do a quick integration test by injecting another log entry.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'heroku sidekiq.1 - - Error R14 (Memory quota exceeded)'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;ken-thats-a-lot-of-work-is-it-worth-it&quot;&gt;Ken, that’s a lot of work! Is it worth it?&lt;/h2&gt;

&lt;p&gt;Boy, howdy! I have a Sidekiq worker that handles a “critical” job queue, for, you know, &lt;em&gt;critical&lt;/em&gt; jobs. Every now and then a user submits a job with a ginormous data set that just makes our Nokigiri parser bloat like that guy from &lt;a href=&quot;https://www.youtube.com/watch?v=klVhwlwHhY4&quot;&gt;“Big Trouble In Little China.”&lt;/a&gt; If it weren’t for my suite of tools, the worker exceeds it’s memory allocation and grinds to a slow crawl. Instead, we signal the worker, spawn a new one, and work goes on it’s merry way.&lt;/p&gt;

&lt;figure&gt;&lt;figcaption&gt;Winning at whack-a-mole.&lt;/figcaption&gt;&lt;img src=&quot;/assets/heroku-critical-metrics.png&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;This keeps my application running and my users happy. I can also allocate the technical debt-service at a time of my choosing, instead of being forced to react to a crisis. Is it perfect? Hell, no, but my pager rings less.&lt;/p&gt;

&lt;p&gt;Oh, yeah, and remember:&lt;/p&gt;

&lt;h2 id=&quot;fix-the-damn-leaks&quot;&gt;Fix the damn leaks!&lt;/h2&gt;
</description>
        <pubDate>Thu, 27 Oct 2016 00:00:00 -0700</pubDate>
        <link>http://localhost:4000/2016/10/27/memory-leak-whack-a-mole.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/10/27/memory-leak-whack-a-mole.html</guid>
        
        <category>devops</category>
        
        <category>puma</category>
        
        <category>heroku</category>
        
        <category>sidekiq</category>
        
        <category>redis</category>
        
        <category>rails</category>
        
        
      </item>
    
  </channel>
</rss>
